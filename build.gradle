import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:3.1.0'
    }

}

group 'com.grpcvsrest'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.bmuschko.docker-remote-api'

sourceCompatibility = 1.8
targetCompatibility = 1.8

startScripts.enabled = false

repositories {
    jcenter()
    maven {
        url "https://grpcvsrest.s3.amazonaws.com/snapshots"
    }
}

dependencies {
    compile 'io.grpc:grpc-all:1.6.1'
    compile 'io.zipkin.brave:brave-instrumentation-grpc:4.9.1'
    compile 'io.zipkin.reporter2:zipkin-sender-urlconnection:2.1.3'
    compile 'org.apache.commons:commons-lang3:3.6'
    compile project(':grpc-api')
    testCompile group: 'junit', name: 'junit', version: '4.12'
}


def mainClassName = "com.grpcvsrest.grpc.aggregator.AggregationServer"

task runServer(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "$mainClassName"
}

task runClient(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.grpcvsrest.grpc.aggregator.AggregationClient'
}

runClient {
    if (project.hasProperty("appArgs")) {
        args Eval.me(appArgs)
    }
}

jar {
    manifest {
        attributes "Main-Class": "$mainClassName"
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

apply from: 'https://raw.githubusercontent.com/gRPCVsREST/gradle-common/master/common.gradle'
